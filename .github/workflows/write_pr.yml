name: Generate PR Description

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  generate-pr-description:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate PR Diff Content
        run: |
          echo "ðŸ”¹ Running git diff between the PR branch and main..."
          git diff origin/main...HEAD > diff_content.txt
          echo " Diff content saved to diff_content.txt"

      - name: Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests  # Install requests library

      - name: Generate PR Description
        env:
          LLAMA_API_URL: https://f8fc-2601-647-4601-2b0-7cf2-6a5e-6b-f510.ngrok-free.app/generate  # Replace with your actual ngrok URL
        run: |
          echo " Running main.py with diff_content.txt"
          python main.py "diff_content.txt" "${{ github.event.pull_request.number }}"

      - name: Capture PR Description Output
        id: read_pr_description
        run: |
          echo " Checking contents of pr_description.txt"
          if [ ! -s pr_description.txt ]; then
            echo " pr_description.txt is empty! Setting default message."
            echo "No content from Llama." > pr_description.txt
          fi
          pr_body=$(cat pr_description.txt)
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "$pr_body" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Debug PR Description Content
        run: |
          echo " Debug: Checking pr_description.txt contents..."
          cat pr_description.txt || echo " pr_description.txt is empty!"

      - name: Update Pull Request Body
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prBody = process.env.PR_BODY;
            if (prBody.trim() === "No content from Llama.") {
              console.log(" Skipping PR update because Llama response is empty.");
            } else {
              console.log(" Updating PR with generated description.");
              github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: prBody
              });
            }
